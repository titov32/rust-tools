name: Build and Release rust-tools

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  docker-build:
    name: 🐳 Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          load: true
          tags: rust-tools:latest

      - name: Save image as artifact
        run: docker save rust-tools:latest | gzip > rust-tools.tar.gz
      - name: Upload image
        uses: actions/upload-artifact@v4
        with:
          name: rust-tools-image
          path: rust-tools.tar.gz

  build-deb:
    name: 📦 Build .deb package
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download docker image
        uses: actions/download-artifact@v4
        with:
          name: rust-tools-image
          path: .

      - name: Load docker image
        run: docker load < rust-tools.tar.gz

      - name: Run container and extract binaries
        run: |
          id=$(docker create rust-tools:latest)
          docker cp $id:/usr/local/bin ./bin
          docker rm -v $id

      - name: Build deb package
        run: python3 build-rust-tools.py

      - name: Upload deb
        uses: actions/upload-artifact@v4
        with:
          name: rust-tools-deb
          path: rust-tools.deb

  release:
    name: 🚀 Release .deb
    runs-on: ubuntu-latest
    needs: build-deb
    steps:
      - name: Download deb
        uses: actions/download-artifact@v4
        with:
          name: rust-tools-deb
          path: .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: rust-tools.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

